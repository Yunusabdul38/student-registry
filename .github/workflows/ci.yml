name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: ["opened", "synchronize", "reopened"]
    branches: ["main"]

jobs:
  test:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        
      - name: Run tests
        working-directory: backend
        run: cargo test --verbose

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
          cache: false
          
      - name: Check formatting
        working-directory: backend
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          cache: false
          
      - name: Run clippy
        working-directory: backend
        run: cargo clippy -- -D warnings

  frontend:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Run build
        working-directory: frontend
        run: npm run build
        
      - name: Run tests (if available)
        working-directory: frontend
        run: npm test --if-present